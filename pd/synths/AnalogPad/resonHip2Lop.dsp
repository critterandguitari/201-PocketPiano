declare filename "resonHip2Lop.dsp"; declare name "resonHip2Lop"; declare version "2.52.3";
declare compile_options "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/filters.lib";
declare library_path2 "/libraries/signals.lib";
declare library_path3 "/libraries/maths.lib";
declare library_path4 "/libraries/platform.lib";
declare filename "FaustDSP";
declare filters_lib_fir_author "Julius O. Smith III";
declare filters_lib_fir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_fir_license "MIT-style STK-4.3 license";
declare filters_lib_iir_author "Julius O. Smith III";
declare filters_lib_iir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_iir_license "MIT-style STK-4.3 license";
declare filters_lib_lowpass0_highpass1 "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_name "Faust Filters Library";
declare filters_lib_resonhp_author "Julius O. Smith III";
declare filters_lib_resonhp_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_resonhp_license "MIT-style STK-4.3 license";
declare filters_lib_resonlp_author "Julius O. Smith III";
declare filters_lib_resonlp_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_resonlp_license "MIT-style STK-4.3 license";
declare filters_lib_tf2_author "Julius O. Smith III";
declare filters_lib_tf2_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2_license "MIT-style STK-4.3 license";
declare filters_lib_tf2s_author "Julius O. Smith III";
declare filters_lib_tf2s_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2s_license "MIT-style STK-4.3 license";
declare filters_lib_version "0.3";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "FaustDSP";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.2";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
ID_0 = hslider("freqLop", 5e+02f, 2e+01f, 1e+04f, 0.01f);
ID_1 = (ID_0 : \(x19).(\(x20).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x19 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x20 : *) : +)~_));
ID_2 = 6.2831855f, ID_1;
ID_3 = (ID_2 : *);
ID_4 = ID_3, 0.5f;
ID_5 = (ID_4 : *);
ID_6 = fconstant(int fSamplingFreq, <math.h>);
ID_7 = 1.0f, ID_6;
ID_8 = (ID_7 : max);
ID_9 = 1.92e+05f, ID_8;
ID_10 = (ID_9 : min);
ID_11 = ID_5, ID_10;
ID_12 = ID_11 : /;
ID_13 = (ID_12 : tan);
ID_14 = 1, ID_13;
ID_15 = (ID_14 : /);
ID_16 = ID_15, ID_15;
ID_17 = (ID_16 : *);
ID_18 = 1, ID_17;
ID_19 = (ID_18 : -);
ID_20 = 2, ID_19;
ID_21 = (ID_20 : *);
ID_22 = hslider("qLop", 2.0f, 1.0f, 24.0f, 0.01f);
ID_23 = (ID_22 : \(x21).(\(x22).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x21 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x22 : *) : +)~_));
ID_24 = 1, ID_23;
ID_25 = (ID_24 : /);
ID_26 = ID_25, ID_15;
ID_27 = (ID_26 : *);
ID_28 = 1, ID_27;
ID_29 = (ID_28 : +);
ID_30 = ID_29, ID_17;
ID_31 = (ID_30 : +);
ID_32 = ID_21, ID_31;
ID_33 = (ID_32 : /);
ID_34 = _, ID_33;
ID_35 = (ID_34 : *);
ID_36 = _, 1;
ID_37 = ID_36 : @;
ID_38 = (ID_22 : \(x23).(\(x24).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x23 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x24 : *) : +)~_));
ID_39 = 1, ID_38;
ID_40 = (ID_39 : /);
ID_41 = (ID_0 : \(x25).(\(x26).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x25 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x26 : *) : +)~_));
ID_42 = 6.2831855f, ID_41;
ID_43 = (ID_42 : *);
ID_44 = ID_43, 0.5f;
ID_45 = (ID_44 : *);
ID_46 = ID_45, ID_10;
ID_47 = ID_46 : /;
ID_48 = (ID_47 : tan);
ID_49 = 1, ID_48;
ID_50 = (ID_49 : /);
ID_51 = ID_40, ID_50;
ID_52 = (ID_51 : *);
ID_53 = 1, ID_52;
ID_54 = (ID_53 : -);
ID_55 = ID_50, ID_50;
ID_56 = (ID_55 : *);
ID_57 = ID_54, ID_56;
ID_58 = (ID_57 : +);
ID_59 = (ID_53 : +);
ID_60 = ID_59, ID_56;
ID_61 = (ID_60 : +);
ID_62 = ID_58, ID_61;
ID_63 = (ID_62 : /);
ID_64 = _, ID_63;
ID_65 = ID_64 : *;
ID_66 = (ID_37 : ID_65);
ID_67 = ID_35, ID_66;
ID_68 = ID_67 :> _;
ID_69 = (_ <: ID_68);
ID_70 = \(x48).(\(x49).(x49,x48 : -)) ~ ID_69;
ID_71 = 0, ID_15;
ID_72 = (ID_71 : *);
ID_73 = 0.5f, ID_72;
ID_74 = (ID_73 : +);
ID_75 = 0, ID_17;
ID_76 = (ID_75 : *);
ID_77 = ID_74, ID_76;
ID_78 = (ID_77 : +);
ID_79 = ID_78, ID_31;
ID_80 = (ID_79 : /);
ID_81 = _, ID_80;
ID_82 = (ID_81 : *);
ID_83 = 0, ID_56;
ID_84 = (ID_83 : *);
ID_85 = 0.5f, ID_84;
ID_86 = (ID_85 : -);
ID_87 = 2, ID_86;
ID_88 = (ID_87 : *);
ID_89 = ID_88, ID_61;
ID_90 = (ID_89 : /);
ID_91 = _, ID_90;
ID_92 = ID_91 : *;
ID_93 = (ID_37 : ID_92);
ID_94 = _, 2;
ID_95 = ID_94 : @;
ID_96 = (ID_0 : \(x27).(\(x28).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x27 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x28 : *) : +)~_));
ID_97 = 6.2831855f, ID_96;
ID_98 = (ID_97 : *);
ID_99 = ID_98, 0.5f;
ID_100 = (ID_99 : *);
ID_101 = ID_100, ID_10;
ID_102 = ID_101 : /;
ID_103 = (ID_102 : tan);
ID_104 = 1, ID_103;
ID_105 = (ID_104 : /);
ID_106 = 0, ID_105;
ID_107 = (ID_106 : *);
ID_108 = 0.5f, ID_107;
ID_109 = (ID_108 : -);
ID_110 = ID_105, ID_105;
ID_111 = (ID_110 : *);
ID_112 = 0, ID_111;
ID_113 = (ID_112 : *);
ID_114 = ID_109, ID_113;
ID_115 = (ID_114 : +);
ID_116 = (ID_22 : \(x29).(\(x30).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x29 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x30 : *) : +)~_));
ID_117 = 1, ID_116;
ID_118 = (ID_117 : /);
ID_119 = ID_118, ID_105;
ID_120 = (ID_119 : *);
ID_121 = 1, ID_120;
ID_122 = (ID_121 : +);
ID_123 = ID_122, ID_111;
ID_124 = (ID_123 : +);
ID_125 = ID_115, ID_124;
ID_126 = (ID_125 : /);
ID_127 = _, ID_126;
ID_128 = ID_127 : *;
ID_129 = (ID_95 : ID_128);
ID_130 = ID_93, ID_129;
ID_131 = ID_82, ID_130;
ID_132 = ID_131 :> _;
ID_133 = _ <: ID_132;
ID_134 = ID_70 : ID_133;
ID_135 = \(x31).((0.5f,x31 : *),(x31 : \(x48).(\(x49).(x49,x48 : -))~(_<:(_,((2,(1,((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -) : *),((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,(((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : _<:(_,(((0.5f,(0,(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),(0,((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x42).(\(x43).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x42 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x43 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,1 : @ : _,((2,(0.5f,(0,((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : -) : *),((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x44).(\(x45).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x44 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x45 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *),(_,2 : @ : _,(((0.5f,(0,(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : -),(0,((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : *) : +),((1,((1,(hslider("qHip", 2.0f, 1.0f, 24.0f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +),((1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /),(1,(((6.2831855f,(hslider("freqHip", 5e+02f, 2e+01f, 1e+04f, 0.01f) : \(x46).(\(x47).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x46 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x47 : *) : +)~_)) : *),0.5f : *),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : / : tan) : /) : *) : +) : /) : *):>_) : -) : ID_134;
ID_136 = _ : ID_135;
process = ID_136;
