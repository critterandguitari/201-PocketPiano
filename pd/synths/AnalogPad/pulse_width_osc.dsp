declare filename "pulse_width_osc.dsp"; declare name "pulse_width_osc"; declare version "2.52.3";
declare compile_options "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/basics.lib";
declare library_path2 "/libraries/signals.lib";
declare library_path3 "/libraries/maths.lib";
declare library_path4 "/libraries/platform.lib";
declare library_path5 "/libraries/oscillators.lib";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.8";
declare filename "FaustDSP";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "FaustDSP";
declare oscillators_lib_lf_sawpos_author "Bart Brouns, revised by St√©phane Letz";
declare oscillators_lib_lf_sawpos_licence "STK-4.3";
declare oscillators_lib_name "Faust Oscillator Library";
declare oscillators_lib_version "0.3";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.2";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
ID_0 = _, 0;
ID_1 = ID_0 : +;
ID_2 = hslider("width", 0.5f, 0.001f, 0.99f, 0.001f);
ID_3 = (ID_2 : \(x4).(\(x5).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5 : *) : +)~_));
ID_4 = \(x3).(4.4e+02f,(2.0f,((x3,69.0f : -),12.0f : /) : pow) : *), ID_3;
ID_5 = \(x6).(\(x7).((((2,(0,(_,((2e+01f,(x6,23.44895f : max : abs) : max),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : +),0 : select2 : \(x11).(x11,(x11 : floor) : -))~_ : *),1 : - : \(x9).(x9,x9 : *) : \(x12).((x12,(x12 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,(x6,23.44895f : max : abs) : max) : /) : /) : /),2 : / : _,(1,1 : @) : *),((((2,(0,(_,((2e+01f,(x6,23.44895f : max : abs) : max),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : +),0 : select2 : \(x11).(x11,(x11 : floor) : -))~_ : *),1 : - : \(x9).(x9,x9 : *) : \(x12).((x12,(x12 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,(x6,23.44895f : max : abs) : max) : /) : /) : /),2 : / : _,(1,1 : @) : *),(0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max : int) : @),(1,((0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max),(0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max : floor) : -) : -) : *) : -),((((2,(0,(_,((2e+01f,(x6,23.44895f : max : abs) : max),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : +),0 : select2 : \(x11).(x11,(x11 : floor) : -))~_ : *),1 : - : \(x9).(x9,x9 : *) : \(x12).((x12,(x12 : mem) : -),(2.0f,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(2e+01f,(x6,23.44895f : max : abs) : max) : /) : /) : /),2 : / : _,(1,1 : @) : *),((0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max : int),1 : +) : @),((0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max),(0,(2047,(x7,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float),(x6,23.44895f : max) : /) : *) : min) : max : floor) : -) : *) : -)), 0.25f;
ID_6 = ID_5 : *;
ID_7 = ID_4 : ID_6;
ID_8 = (ID_1 : ID_7);
ID_9 = hslider("detune", 0.01f, -24.0f, 24.0f, 0.001f);
ID_10 = (ID_9 : \(x13).(\(x14).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x13 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x14 : *) : +)~_));
ID_11 = _, ID_10;
ID_12 = ID_11 : +;
ID_13 = (ID_12 : ID_7);
ID_14 = ID_8, ID_13;
ID_15 = ID_14 : +;
ID_16 = _ <: ID_15;
process = ID_16;
