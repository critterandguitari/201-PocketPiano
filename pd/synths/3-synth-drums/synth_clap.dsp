declare filename "synth_clap.dsp"; declare name "synth_clap"; declare version "2.52.3";
declare compile_options "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/noises.lib";
declare library_path2 "/libraries/filters.lib";
declare library_path3 "/libraries/maths.lib";
declare library_path4 "/libraries/platform.lib";
declare library_path5 "/libraries/envelopes.lib";
declare library_path6 "/libraries/basics.lib";
declare library_path7 "/libraries/signals.lib";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.8";
declare envelopes_lib_adsre_author "Julius O. Smith III";
declare envelopes_lib_adsre_licence "STK-4.3";
declare envelopes_lib_author "GRAME";
declare envelopes_lib_copyright "GRAME";
declare envelopes_lib_license "LGPL with exception";
declare envelopes_lib_name "Faust Envelope Library";
declare envelopes_lib_version "0.2";
declare filename "FaustDSP";
declare filters_lib_fir_author "Julius O. Smith III";
declare filters_lib_fir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_fir_license "MIT-style STK-4.3 license";
declare filters_lib_highpass_author "Julius O. Smith III";
declare filters_lib_highpass_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_iir_author "Julius O. Smith III";
declare filters_lib_iir_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_iir_license "MIT-style STK-4.3 license";
declare filters_lib_lowpass0_highpass1 "MIT-style STK-4.3 license";
declare filters_lib_lowpass0_highpass1_author "Julius O. Smith III";
declare filters_lib_lowpass_author "Julius O. Smith III";
declare filters_lib_lowpass_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_lowpass_license "MIT-style STK-4.3 license";
declare filters_lib_name "Faust Filters Library";
declare filters_lib_tf2_author "Julius O. Smith III";
declare filters_lib_tf2_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2_license "MIT-style STK-4.3 license";
declare filters_lib_tf2s_author "Julius O. Smith III";
declare filters_lib_tf2s_copyright "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>";
declare filters_lib_tf2s_license "MIT-style STK-4.3 license";
declare filters_lib_version "0.3";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "FaustDSP";
declare noises_lib_name "Faust Noise Generator Library";
declare noises_lib_version "0.4";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.2";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
ID_0 = _, 12345;
ID_1 = (ID_0 : +);
ID_2 = _, 1103515245;
ID_3 = (ID_2 : *);
ID_4 = ID_1 ~ ID_3;
ID_5 = ID_4, 2.1474836e+09f;
ID_6 = ID_5 : /;
ID_7 = _, -2.494956f;
ID_8 = (ID_7 : *);
ID_9 = _, 1;
ID_10 = ID_9 : @;
ID_11 = _, 2.0172658f;
ID_12 = ID_11 : *;
ID_13 = (ID_10 : ID_12);
ID_14 = _, 2;
ID_15 = ID_14 : @;
ID_16 = _, -0.5221894f;
ID_17 = ID_16 : *;
ID_18 = (ID_15 : ID_17);
ID_19 = ID_13, ID_18;
ID_20 = ID_8, ID_19;
ID_21 = ID_20 :> _;
ID_22 = (_ <: ID_21);
ID_23 = \(x1).(\(x2).(x2,x1 : -)) ~ ID_22;
ID_24 = _, 0.049922034f;
ID_25 = (ID_24 : *);
ID_26 = _, -0.095993534f;
ID_27 = ID_26 : *;
ID_28 = (ID_10 : ID_27);
ID_29 = _, 0.0506127f;
ID_30 = ID_29 : *;
ID_31 = (ID_15 : ID_30);
ID_32 = _, 3;
ID_33 = ID_32 : @;
ID_34 = _, -0.004408786f;
ID_35 = ID_34 : *;
ID_36 = (ID_33 : ID_35);
ID_37 = ID_31, ID_36;
ID_38 = ID_28, ID_37;
ID_39 = ID_25, ID_38;
ID_40 = ID_39 :> _;
ID_41 = _ <: ID_40;
ID_42 = ID_23 : ID_41;
ID_43 = ID_6 : ID_42;
ID_44 = hslider("tone", 0.5f, 0.0f, 1.0f, 0.001f);
ID_45 = ID_44, 1000;
ID_46 = (ID_45 : *);
ID_47 = ID_46, 50;
ID_48 = (ID_47 : +);
ID_49 = 6.2831855f, ID_48;
ID_50 = (ID_49 : *);
ID_51 = ID_50, 0.5f;
ID_52 = (ID_51 : *);
ID_53 = fconstant(int fSamplingFreq, <math.h>);
ID_54 = 1.0f, ID_53;
ID_55 = (ID_54 : max);
ID_56 = 1.92e+05f, ID_55;
ID_57 = (ID_56 : min);
ID_58 = ID_52, ID_57;
ID_59 = ID_58 : /;
ID_60 = (ID_59 : tan);
ID_61 = 1, ID_60;
ID_62 = (ID_61 : /);
ID_63 = ID_62, ID_62;
ID_64 = (ID_63 : *);
ID_65 = 1, ID_64;
ID_66 = (ID_65 : -);
ID_67 = 2, ID_66;
ID_68 = (ID_67 : *);
ID_69 = 1.4142135f, ID_62;
ID_70 = (ID_69 : *);
ID_71 = 1, ID_70;
ID_72 = (ID_71 : +);
ID_73 = ID_72, ID_64;
ID_74 = (ID_73 : +);
ID_75 = ID_68, ID_74;
ID_76 = (ID_75 : /);
ID_77 = _, ID_76;
ID_78 = (ID_77 : *);
ID_79 = (ID_71 : -);
ID_80 = ID_79, ID_64;
ID_81 = (ID_80 : +);
ID_82 = ID_81, ID_74;
ID_83 = (ID_82 : /);
ID_84 = _, ID_83;
ID_85 = ID_84 : *;
ID_86 = (ID_10 : ID_85);
ID_87 = ID_78, ID_86;
ID_88 = ID_87 :> _;
ID_89 = (_ <: ID_88);
ID_90 = \(x3).(\(x4).(x4,x3 : -)) ~ ID_89;
ID_91 = 0, ID_62;
ID_92 = (ID_91 : *);
ID_93 = 0, ID_92;
ID_94 = (ID_93 : +);
ID_95 = (ID_65 : *);
ID_96 = ID_94, ID_95;
ID_97 = (ID_96 : +);
ID_98 = ID_97, ID_74;
ID_99 = (ID_98 : /);
ID_100 = _, ID_99;
ID_101 = (ID_100 : *);
ID_102 = 0, ID_95;
ID_103 = (ID_102 : -);
ID_104 = 2, ID_103;
ID_105 = (ID_104 : *);
ID_106 = ID_105, ID_74;
ID_107 = (ID_106 : /);
ID_108 = _, ID_107;
ID_109 = ID_108 : *;
ID_110 = (ID_10 : ID_109);
ID_111 = (ID_93 : -);
ID_112 = ID_111, ID_95;
ID_113 = (ID_112 : +);
ID_114 = ID_113, ID_74;
ID_115 = (ID_114 : /);
ID_116 = _, ID_115;
ID_117 = ID_116 : *;
ID_118 = (ID_15 : ID_117);
ID_119 = ID_110, ID_118;
ID_120 = ID_101, ID_119;
ID_121 = ID_120 :> _;
ID_122 = _ <: ID_121;
ID_123 = ID_90 : ID_122;
ID_124 = _ : ID_123;
ID_125 = ID_44, 9000;
ID_126 = (ID_125 : *);
ID_127 = ID_126, 1000;
ID_128 = (ID_127 : +);
ID_129 = 6.2831855f, ID_128;
ID_130 = (ID_129 : *);
ID_131 = ID_130, 0.5f;
ID_132 = (ID_131 : *);
ID_133 = ID_132, ID_57;
ID_134 = ID_133 : /;
ID_135 = (ID_134 : tan);
ID_136 = 1, ID_135;
ID_137 = (ID_136 : /);
ID_138 = ID_137, ID_137;
ID_139 = (ID_138 : *);
ID_140 = 1, ID_139;
ID_141 = (ID_140 : -);
ID_142 = 2, ID_141;
ID_143 = (ID_142 : *);
ID_144 = 1.4142135f, ID_137;
ID_145 = (ID_144 : *);
ID_146 = 1, ID_145;
ID_147 = (ID_146 : +);
ID_148 = ID_147, ID_139;
ID_149 = (ID_148 : +);
ID_150 = ID_143, ID_149;
ID_151 = (ID_150 : /);
ID_152 = _, ID_151;
ID_153 = (ID_152 : *);
ID_154 = (ID_146 : -);
ID_155 = ID_154, ID_139;
ID_156 = (ID_155 : +);
ID_157 = ID_156, ID_149;
ID_158 = (ID_157 : /);
ID_159 = _, ID_158;
ID_160 = ID_159 : *;
ID_161 = (ID_10 : ID_160);
ID_162 = ID_153, ID_161;
ID_163 = ID_162 :> _;
ID_164 = (_ <: ID_163);
ID_165 = \(x3).(\(x4).(x4,x3 : -)) ~ ID_164;
ID_166 = 0, ID_137;
ID_167 = (ID_166 : *);
ID_168 = 1, ID_167;
ID_169 = (ID_168 : +);
ID_170 = 0, ID_139;
ID_171 = (ID_170 : *);
ID_172 = ID_169, ID_171;
ID_173 = (ID_172 : +);
ID_174 = ID_173, ID_149;
ID_175 = (ID_174 : /);
ID_176 = _, ID_175;
ID_177 = (ID_176 : *);
ID_178 = 1, ID_171;
ID_179 = (ID_178 : -);
ID_180 = 2, ID_179;
ID_181 = (ID_180 : *);
ID_182 = ID_181, ID_149;
ID_183 = (ID_182 : /);
ID_184 = _, ID_183;
ID_185 = ID_184 : *;
ID_186 = (ID_10 : ID_185);
ID_187 = (ID_168 : -);
ID_188 = ID_187, ID_171;
ID_189 = (ID_188 : +);
ID_190 = ID_189, ID_149;
ID_191 = (ID_190 : /);
ID_192 = _, ID_191;
ID_193 = ID_192 : *;
ID_194 = (ID_15 : ID_193);
ID_195 = ID_186, ID_194;
ID_196 = ID_177, ID_195;
ID_197 = ID_196 :> _;
ID_198 = _ <: ID_197;
ID_199 = ID_165 : ID_198;
ID_200 = _ : ID_199;
ID_201 = ID_124 : ID_200;
ID_202 = ID_43 : ID_201;
ID_203 = button("gate");
ID_204 = ID_203, 0;
ID_205 = (ID_204 : @);
ID_206 = ID_205, 0;
ID_207 = (ID_206 : >);
ID_208 = _, ID_207;
ID_209 = (ID_208 : *);
ID_210 = + ~ ID_209;
ID_211 = (ID_207 : ID_210);
ID_212 = 0.001f, ID_57;
ID_213 = ID_212 : *;
ID_214 = (ID_213 : int);
ID_215 = ID_211, ID_214;
ID_216 = (ID_215 : <);
ID_217 = _, mem;
ID_218 = ID_217 : -;
ID_219 = _, 0;
ID_220 = (ID_219 : >);
ID_221 = ID_220, _;
ID_222 = ID_221 : *;
ID_223 = ID_218 <: ID_222;
ID_224 = _ <: ID_223;
ID_225 = (ID_207 : ID_224);
ID_226 = ID_216, ID_225;
ID_227 = (ID_226 : |);
ID_228 = (ID_207 : float);
ID_229 = 0, ID_228;
ID_230 = (ID_229 : *);
ID_231 = ID_230, ID_207;
ID_232 = ID_227, ID_231;
ID_233 = (ID_232 : select2);
ID_234 = 0.0f, ID_233;
ID_235 = ID_207, ID_234;
ID_236 = ID_235 : select2;
ID_237 = (ID_236 : \(x5).(\(x6).(((1.0f,((((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x5 : *),(((((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),0 : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),0 : @),0 : > : +~(_,((button("gate"),0 : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),0 : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x6 : *) : +)~_));
ID_238 = _, ID_237;
ID_239 = (ID_238 : *);
ID_240 = hslider("space", 0.212f, 0.0f, 1.0f, 0.001f);
ID_241 = ID_240, 8000;
ID_242 = (ID_241 : *);
ID_243 = 0.0625f, ID_242;
ID_244 = (ID_243 : *);
ID_245 = ID_203, ID_244;
ID_246 = (ID_245 : @);
ID_247 = ID_246, 0;
ID_248 = (ID_247 : >);
ID_249 = _, ID_248;
ID_250 = (ID_249 : *);
ID_251 = + ~ ID_250;
ID_252 = (ID_248 : ID_251);
ID_253 = ID_252, ID_214;
ID_254 = (ID_253 : <);
ID_255 = (ID_248 : ID_224);
ID_256 = ID_254, ID_255;
ID_257 = (ID_256 : |);
ID_258 = (ID_248 : float);
ID_259 = 0, ID_258;
ID_260 = (ID_259 : *);
ID_261 = ID_260, ID_248;
ID_262 = ID_257, ID_261;
ID_263 = (ID_262 : select2);
ID_264 = 0.0f, ID_263;
ID_265 = ID_248, ID_264;
ID_266 = ID_265 : select2;
ID_267 = (ID_266 : \(x7).(\(x8).(((1.0f,((((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x7 : *),(((((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.0625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x8 : *) : +)~_));
ID_268 = _, ID_267;
ID_269 = (ID_268 : *);
ID_270 = ID_239, ID_269;
ID_271 = (ID_270 : +);
ID_272 = 0.25f, ID_242;
ID_273 = (ID_272 : *);
ID_274 = ID_203, ID_273;
ID_275 = (ID_274 : @);
ID_276 = ID_275, 0;
ID_277 = (ID_276 : >);
ID_278 = _, ID_277;
ID_279 = (ID_278 : *);
ID_280 = + ~ ID_279;
ID_281 = (ID_277 : ID_280);
ID_282 = ID_281, ID_214;
ID_283 = (ID_282 : <);
ID_284 = (ID_277 : ID_224);
ID_285 = ID_283, ID_284;
ID_286 = (ID_285 : |);
ID_287 = (ID_277 : float);
ID_288 = 0, ID_287;
ID_289 = (ID_288 : *);
ID_290 = ID_289, ID_277;
ID_291 = ID_286, ID_290;
ID_292 = (ID_291 : select2);
ID_293 = 0.0f, ID_292;
ID_294 = ID_277, ID_293;
ID_295 = ID_294 : select2;
ID_296 = (ID_295 : \(x9).(\(x10).(((1.0f,((((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x9 : *),(((((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.25f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x10 : *) : +)~_));
ID_297 = _, ID_296;
ID_298 = (ID_297 : *);
ID_299 = ID_271, ID_298;
ID_300 = (ID_299 : +);
ID_301 = 0.5625f, ID_242;
ID_302 = (ID_301 : *);
ID_303 = ID_203, ID_302;
ID_304 = (ID_303 : @);
ID_305 = ID_304, 0;
ID_306 = (ID_305 : >);
ID_307 = _, ID_306;
ID_308 = (ID_307 : *);
ID_309 = + ~ ID_308;
ID_310 = (ID_306 : ID_309);
ID_311 = ID_310, ID_214;
ID_312 = (ID_311 : <);
ID_313 = (ID_306 : ID_224);
ID_314 = ID_312, ID_313;
ID_315 = (ID_314 : |);
ID_316 = (ID_306 : float);
ID_317 = 0, ID_316;
ID_318 = (ID_317 : *);
ID_319 = ID_318, ID_306;
ID_320 = ID_315, ID_319;
ID_321 = (ID_320 : select2);
ID_322 = 0.0f, ID_321;
ID_323 = ID_306, ID_322;
ID_324 = ID_323 : select2;
ID_325 = (ID_324 : \(x11).(\(x12).(((1.0f,((((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x11 : *),(((((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),(((((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : +~(_,((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(0.5625f,(hslider("space", 0.212f, 0.0f, 1.0f, 0.001f),8000 : *) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("decay", 0.25f, 0.0f, 1.0f, 0.001f),0.5f : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x12 : *) : +)~_));
ID_326 = _, ID_325;
ID_327 = (ID_326 : *);
ID_328 = ID_300, ID_327;
ID_329 = (ID_328 : +);
ID_330 = (ID_204 : >);
ID_331 = _, ID_330;
ID_332 = (ID_331 : *);
ID_333 = + ~ ID_332;
ID_334 = (ID_330 : ID_333);
ID_335 = ID_334, ID_214;
ID_336 = (ID_335 : <);
ID_337 = (ID_330 : ID_224);
ID_338 = ID_336, ID_337;
ID_339 = (ID_338 : |);
ID_340 = (ID_330 : float);
ID_341 = 0, ID_340;
ID_342 = (ID_341 : *);
ID_343 = ID_342, ID_330;
ID_344 = ID_339, ID_343;
ID_345 = (ID_344 : select2);
ID_346 = 0.0f, ID_345;
ID_347 = ID_330, ID_346;
ID_348 = ID_347 : select2;
ID_349 = (ID_348 : \(x13).(\(x14).(((1.0f,(((((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x13 : *),((((((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(0.001f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("end", 0.25f, 0.0f, 1.0f, 0.001f),2 : *),0.001f : +),0.001f : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x14 : *) : +)~_));
ID_350 = _, ID_349;
ID_351 = (ID_350 : *);
ID_352 = ID_329, ID_351;
ID_353 = ID_352 : +;
ID_354 = (ID_202 <: ID_353);
ID_355 = hslider("gain", 0.5f, 0.0f, 1.0f, 0.001f);
ID_356 = ID_354, ID_355;
ID_357 = ID_356 : *;
process = ID_357;
