declare filename "synth_kick.dsp"; declare name "synth_kick"; declare version "2.52.3";
declare compile_options "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/envelopes.lib";
declare library_path2 "/libraries/maths.lib";
declare library_path3 "/libraries/platform.lib";
declare library_path4 "/libraries/basics.lib";
declare library_path5 "/libraries/signals.lib";
declare library_path6 "/libraries/oscillators.lib";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.8";
declare envelopes_lib_adsre_author "Julius O. Smith III";
declare envelopes_lib_adsre_licence "STK-4.3";
declare envelopes_lib_author "GRAME";
declare envelopes_lib_copyright "GRAME";
declare envelopes_lib_license "LGPL with exception";
declare envelopes_lib_name "Faust Envelope Library";
declare envelopes_lib_version "0.2";
declare filename "FaustDSP";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "FaustDSP";
declare oscillators_lib_name "Faust Oscillator Library";
declare oscillators_lib_version "0.3";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.2";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
ID_0 = button("gate");
ID_1 = ID_0, 0;
ID_2 = (ID_1 : >);
ID_3 = _, ID_2;
ID_4 = (ID_3 : *);
ID_5 = + ~ ID_4;
ID_6 = (ID_2 : ID_5);
ID_7 = hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f);
ID_8 = ID_7, 1;
ID_9 = (ID_8 : *);
ID_10 = ID_9, 0.001f;
ID_11 = (ID_10 : +);
ID_12 = fconstant(int fSamplingFreq, <math.h>);
ID_13 = 1.0f, ID_12;
ID_14 = (ID_13 : max);
ID_15 = 1.92e+05f, ID_14;
ID_16 = (ID_15 : min);
ID_17 = ID_11, ID_16;
ID_18 = ID_17 : *;
ID_19 = (ID_18 : int);
ID_20 = ID_6, ID_19;
ID_21 = (ID_20 : <);
ID_22 = _, mem;
ID_23 = ID_22 : -;
ID_24 = _, 0;
ID_25 = (ID_24 : >);
ID_26 = ID_25, _;
ID_27 = ID_26 : *;
ID_28 = ID_23 <: ID_27;
ID_29 = _ <: ID_28;
ID_30 = (ID_2 : ID_29);
ID_31 = ID_21, ID_30;
ID_32 = (ID_31 : |);
ID_33 = (ID_2 : float);
ID_34 = 0, ID_33;
ID_35 = (ID_34 : *);
ID_36 = ID_35, ID_2;
ID_37 = ID_32, ID_36;
ID_38 = (ID_37 : select2);
ID_39 = 0.0f, ID_38;
ID_40 = ID_2, ID_39;
ID_41 = ID_40 : select2;
ID_42 = (ID_41 : \(x1).(\(x2).(((1.0f,(((((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x1 : *),((((((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("freqDec", 0.01f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("freqAtt", 0.001f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x2 : *) : +)~_));
ID_43 = hslider("tone", 0.08f, 0.005f, 1.0f, 0.001f);
ID_44 = ID_43, 10000;
ID_45 = (ID_44 : *);
ID_46 = ID_42, ID_45;
ID_47 = (ID_46 : *);
ID_48 = hslider("freq", 55.0f, 2e+01f, 4.4e+02f, 0.001f);
ID_49 = ID_47, ID_48;
ID_50 = ID_49 : +;
ID_51 = \(x3).(65536,((((_,(65536 : int) : %)~(_,(1 : mem) : +) : float),6.2831855f : *),(65536 : float) : / : sin),((0,(_,(x3,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : +),0 : select2 : \(x4).(x4,(x4 : floor) : -))~_ : _,(65536 : float) : * : int) : rdtable), 0.5f;
ID_52 = ID_51 : *;
ID_53 = hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f);
ID_54 = ID_53, 1;
ID_55 = (ID_54 : *);
ID_56 = ID_55, 0.001f;
ID_57 = (ID_56 : +);
ID_58 = ID_57, ID_16;
ID_59 = ID_58 : *;
ID_60 = (ID_59 : int);
ID_61 = ID_6, ID_60;
ID_62 = (ID_61 : <);
ID_63 = ID_62, ID_30;
ID_64 = (ID_63 : |);
ID_65 = ID_64, ID_36;
ID_66 = (ID_65 : select2);
ID_67 = 0.0f, ID_66;
ID_68 = ID_2, ID_67;
ID_69 = ID_68 : select2;
ID_70 = (ID_69 : \(x5).(\(x6).(((1.0f,(((((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x5 : *),((((((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),((hslider("ampDec", 0.5f, 0.0f, 1.0f, 0.001f),4 : *),0.001f : +),((hslider("ampAtt", 0.01f, 0.0f, 1.0f, 0.001f),1 : *),0.001f : +) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x6 : *) : +)~_));
ID_71 = _, ID_70;
ID_72 = ID_71 : *;
ID_73 = ID_52 : ID_72;
ID_74 = (ID_50 : ID_73);
ID_75 = hslider("gain", 0.5f, 0.0f, 1.0f, 0.001f);
ID_76 = ID_74, ID_75;
ID_77 = ID_76 : *;
process = ID_77;
